//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z11computationPfS_S_ii
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[13] = {83, 77, 32, 110, 117, 109, 58, 32, 37, 100, 32, 10, 0};

.visible .entry _Z11computationPfS_S_ii(
	.param .u64 _Z11computationPfS_S_ii_param_0,
	.param .u64 _Z11computationPfS_S_ii_param_1,
	.param .u64 _Z11computationPfS_S_ii_param_2,
	.param .u32 _Z11computationPfS_S_ii_param_3,
	.param .u32 _Z11computationPfS_S_ii_param_4
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<15>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z11computationPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z11computationPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z11computationPfS_S_ii_param_2];
	ld.param.u32 	%r2, [_Z11computationPfS_S_ii_param_3];
	ld.param.u32 	%r3, [_Z11computationPfS_S_ii_param_4];
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	// inline asm
	mov.u32 %r1, %smid;
	// inline asm
	st.local.u32 	[%rd5], %r1;
	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.gt.s32	%p1, %r1, %r3;
	setp.lt.s32	%p2, %r1, %r2;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_2;

	mov.u32 	%r5, %tid.x;
	cvta.to.global.u64 	%rd8, %rd1;
	mul.wide.s32 	%rd9, %r5, 4;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd2;
	add.s64 	%rd12, %rd11, %rd9;
	ld.global.f32 	%f1, [%rd12];
	ld.global.f32 	%f2, [%rd10];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd13, %rd3;
	add.s64 	%rd14, %rd13, %rd9;
	st.global.f32 	[%rd14], %f3;

BB0_2:
	ret;
}


